version: "3.9"

x-logging:
  &loki-logging
  driver: loki
  options:
    loki-url: "http://192.168.55.20:3100/loki/api/v1/push"
    loki-batch-size: "400"
    loki-retries: "7"
    loki-timeout: "5s"

services:
  nextcloud-db:
    image: mariadb
    container_name: nextcloud-db
    command: --transaction-isolation=READ-COMMITTED --log-bin=ROW --innodb_read_only_compressed=OFF
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - mariadb_data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD} #SQL root Passwort eingeben
      - MYSQL_PASSWORD=${MYSQL_PASSWORD} #SQL Benutzer Passwort eingeben
      - MYSQL_DATABASE=${MYSQL_DATABASE} #Datenbank Name
      - MYSQL_USER=${MYSQL_USER} #SQL Nutzername
      - MYSQL_INITDB_SKIP_TZINFO=1 
    networks:
      - nextcloud
    logging: *loki-logging

  nextcloud-redis:
    image: redis:alpine
    container_name: nextcloud-redis
    hostname: nextcloud-redis
    networks:
        - nextcloud
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    logging: *loki-logging

  nextcloud-app:
    build: ./nextcloud-app
    container_name: nextcloud-app
    restart: unless-stopped
    depends_on:
      - nextcloud-db
      - nextcloud-redis
    environment:
        REDIS_HOST: nextcloud-redis
        REDIS_HOST_PASSWORD: ${REDIS_PASSWORD}
        NEXTCLOUD_ADMIN_USER: ${NEXTCLOUD_ADMIN_USER}
        NEXTCLOUD_ADMIN_PASSWORD: ${NEXTCLOUD_ADMIN_PASSWORD}
        NEXTCLOUD_TRUSTED_DOMAINS: ${NEXTCLOUD_TRUSTED_DOMAINS}
        MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        MYSQL_DATABASE: ${MYSQL_DATABASE}
        MYSQL_USER: ${MYSQL_USER}
        SMTP_HOST: ${SMTP_HOST}
        SMTP_SECURE: ${SMTP_SECURE}
        SMTP_PORT: ${SMTP_PORT}
        SMTP_AUTHTYPE: ${SMTP_AUTHTYPE}
        SMTP_NAME: ${SMTP_NAME}
        SMTP_PASSWORD: ${SMTP_PASSWORD}
        MAIL_FROM_ADDRESS: ${MAIL_FROM_ADDRESS}
        MAIL_DOMAIN: ${MAIL_DOMAIN}
        PHP_MEMORY_LIMIT: ${PHP_MEMORY_LIMIT}
        PHP_UPLOAD_LIMIT: ${PHP_UPLOAD_LIMIT}
    volumes:
      - ./app:/var/www/html
      - /data:/var/www/html/data
      # - ./imagemagick/policy.xml:/etc/ImageMagick-6/policy.xml
    # labels:
    #   - "traefik.enable=true"
    #   - "traefik.http.routers.nextcloud-app.entrypoints=http"
    #   - "traefik.http.routers.nextcloud-app.rule=Host(`cloudng.iot-schweiz.ch`)"
    #   - "traefik.http.middlewares.nextcloud-app-https-redirect.redirectscheme.scheme=https"
    #   - "traefik.http.routers.nextcloud-app.middlewares=nextcloud-app-https-redirect"
    #   - "traefik.http.routers.nextcloud-app-secure.entrypoints=https"
    #   - "traefik.http.routers.nextcloud-app-secure.rule=Host(`nextcloud.euredomain.de`)"
    #   - "traefik.http.routers.nextcloud-app-secure.tls=true"
    #   - "traefik.http.routers.nextcloud-app-secure.tls.certresolver=http"
    #   - "traefik.http.routers.nextcloud-app-secure.service=nextcloud-app"
    #   - "traefik.http.services.nextcloud-app.loadbalancer.server.port=80"
    #   - "traefik.docker.network=proxy"
    #   - "traefik.http.routers.nextcloud-app-secure.middlewares=nextcloud-dav,secHeaders@file"
    #   - "traefik.http.middlewares.nextcloud-dav.replacepathregex.regex=^/.well-known/ca(l|rd)dav"
    #   - "traefik.http.middlewares.nextcloud-dav.replacepathregex.replacement=/remote.php/dav/"
    networks:
      - nextcloud
    ports:
      - 443:443
      - 80:80
    logging: *loki-logging

  elasticsearch:
    build: ./elasticsearch
    container_name: elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - nextcloud
    logging: *loki-logging

  # watchtower:
  #   restart: unless-stopped
  #   container_name: WatchTower
  #   image: containrrr/watchtower
  #   environment:
  #     - WATCHTOWER_CLEANUP=true
  #     - WATCHTOWER_INCLUDE_RESTARTING=true
  #     - WATCHTOWER_ROLLING_RESTART=true
  #     - WATCHTOWER_INCLUDE_STOPPED=true
  #     - WATCHTOWER_NOTIFICATIONS=gotify
  #     - "WATCHTOWER_NOTIFICATION_GOTIFY_URL=http://192.168.55.5:85"
  #     - WATCHTOWER_NOTIFICATION_GOTIFY_TOKEN=${GOTIFY_TOKEN}
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   command: --interval 21600
  #   networks:
  #     - net-watchtower

  agent:
    restart: unless-stopped
    container_name: PortainerAgent
    image: portainer/agent:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    ports:
      - 9001:9001
    networks:
      - net-portainer
    logging: *loki-logging

volumes:
  mariadb_data:
  elasticsearch_data:

networks:
  nextcloud:
  net-portainer:


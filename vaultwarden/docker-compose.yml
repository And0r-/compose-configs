version: "3.9"

x-logging:
  &loki-logging
  driver: loki
  options:
    loki-url: "http://192.168.55.20:3100/loki/api/v1/push"
    loki-batch-size: "400"
    loki-retries: "7"
    loki-timeout: "5s"


services:
  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    restart: always
    environment:
      - ENV_FILE=/config/.env
    volumes:
      - vaultwarden-data:/data
      - ${PWD}/.env:/config/.env
    logging: *loki-logging
    networks:
      - net-vaultwarden

  postgresql:
    container_name: postgresql
    image: docker.io/bitnami/postgresql:latest
    environment:
      - POSTGRESQL_USERNAME=${POSTGRESQL_USERNAME}
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_DATABASE=${POSTGRESQL_DATABASE}
    restart: always
    expose:
      - '5432'
    volumes:
      - postgresql_data:/bitnami/postgresql
    logging: *loki-logging
    networks:
      - net-vaultwarden

  watchtower:
    restart: unless-stopped
    container_name: WatchTower
    image: containrrr/watchtower
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_INCLUDE_RESTARTING=true
      - WATCHTOWER_ROLLING_RESTART=true
      - WATCHTOWER_INCLUDE_STOPPED=true
      - WATCHTOWER_NOTIFICATIONS=gotify
      - "WATCHTOWER_NOTIFICATION_GOTIFY_URL=http://192.168.55.5:85"
      - WATCHTOWER_NOTIFICATION_GOTIFY_TOKEN=${GOTIFY_TOKEN}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 21600
    logging: *loki-logging
    networks:
      - net-watchtower

  agent:
    restart: unless-stopped
    container_name: PortainerAgent
    image: portainer/agent:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    ports:
      - 9001:9001
    networks:
      - net-portainer
    logging: *loki-logging

volumes:
  vaultwarden-data:
  postgresql_data:

networks:
  net-vaultwarden:
  net-portainer:
  net-watchtower:

